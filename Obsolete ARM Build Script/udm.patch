--- etc/cron.d/ntopng.orig	2023-03-04 07:23:28.685708584 -0500
+++ etc/cron.d/ntopng	2023-03-07 06:36:38.826744070 -0500
@@ -2,7 +2,7 @@
 # This is used to handle software updates.
 
 # Check for updates or upgrade if requested (every minute)
-* * * * * root /usr/bin/ntopng-utils-manage-updates -a handle-on-demand-requests
+#* * * * * root /usr/bin/ntopng-utils-manage-updates -a handle-on-demand-requests
 
 # Check for updates (every 24h at 5am)
-30 5 * * * root /usr/bin/ntopng-utils-manage-updates -a check-updates
+#30 5 * * * root /usr/bin/ntopng-utils-manage-updates -a check-updates
--- etc/ntopng/ntopng.conf.orig	2023-03-04 07:23:28.685708584 -0500
+++ etc/ntopng/ntopng.conf	2023-03-07 06:38:21.858115797 -0500
@@ -32,6 +32,11 @@
 #
 # -w=3000
 #
+#       -W|--https-port
+#        Enables the HTTPS port of the embedded server.
+#
+-W=3001/
+#
 #       -m|--local-networks
 #        ntopng determines the ip addresses and netmasks for each active interface. Any traffic on
 #        those  networks  is considered local. This parameter allows the user to define additional
@@ -62,6 +67,7 @@
 #        Specifies the data directory (it must be writable by the user that is executing ntopng).
 #
 # -d=/var/lib/ntopng
+-d=/data/ntopng
 #
 #       -q|--disable-autologout
 #        Disable web interface logout for inactivity.
--- ubuntu/debian.ntopng/postinst.in.orig	2023-05-08 18:23:12.414465964 -0400
+++ ubuntu/debian.ntopng/postinst.in	2023-05-08 18:56:28.596682369 -0400
@@ -49,7 +49,7 @@
 fi
 
 
-DATA_DIR=/var/lib/ntopng
+DATA_DIR=/data/ntopng
 if [ ! -d "$DATA_DIR" ]; then
     mkdir $DATA_DIR
     /bin/chown ntopng:ntopng $DATA_DIR
@@ -71,6 +71,45 @@
 
 if [ -f /.dockerenv ]; then exit 0; fi
 
+# Make sure the ownership is correct for any pre-existing redis or ntopng data 
+# directories on the UDM
+if [ -d /data/redis ]; then
+	chown -R redis:redis /data/redis
+fi
+if [ -d /volume1/redis ]; then
+	chown -R redis:redis /volume1/redis
+fi
+if [ -d /data/ntopng ]; then
+	chown -R ntopng:ntopng /data/ntopng
+fi
+if [ -d /volume1/ntopng ]; then
+	chown -R ntopng:ntopng /volume1/ntopng
+fi
+
+# Move redis data from /var/lib/redis to /data/redis or /volume1/redis on the UDM
+if grep -q -e '^dir /var/lib/redis' /etc/redis/redis.conf; then
+    REDIS_DIR='/data/redis'
+    if [ -d /volume1/.srv ]; then
+        REDIS_DIR="/volume1/redis"
+    fi
+    echo "Moving the redis persistent store to the UDM's persistent filesystem at \"${REDIS_DIR}\""
+    if [ ! -d $REDIS_DIR ]; then
+        mkdir -m 750 $REDIS_DIR
+        chown redis:redis $REDIS_DIR
+    fi
+    systemctl stop redis
+    if [ ! -d /etc/systemd/system/redis-server.service.d ]; then
+        mkdir /etc/systemd/system/redis-server.service.d
+    fi
+    echo "[Service]\nReadWriteDirectories=-${REDIS_DIR}" >/etc/systemd/system/redis-server.service.d/override.conf
+    systemctl daemon-reload
+    if [ -f /var/lib/redis/dump.rdb ] && [ ! -f "${REDIS_DIR}/dump.rdb" ]; then
+        mv /var/lib/redis/* ${REDIS_DIR}/
+    fi
+    sed -i "s|dir /var/lib/redis|dir ${REDIS_DIR}|" /etc/redis/redis.conf
+    systemctl start redis
+fi
+
 # Start service after upgrade/install
 echo "(Re)Starting @APP@..."
 if hash systemctl 2>/dev/null; then
@@ -102,20 +141,20 @@
     /etc/init.d/ntopng restart
 fi
 
-echo ""
-echo "NOTE"
-echo ""
-echo "ntopng Community does not require a license."
-echo "ntopng Pro/Enterprise licenses are perpetual and include 1 year maintenance/updates:"
-echo "you can use the software even after maintenance is expired, however updating it after"
-echo "1 year would prevent ntopng from running. If you have automatic updates enabled, and"
-echo "maintenance is expired, it is recommended to put the package updates on hold with:"
-echo ""
-echo "apt-mark hold ntopng"
-echo ""
-echo "Automatic updates can be enabled again with:"
-echo ""
-echo "apt-mark unhold ntopng"
+#echo ""
+#echo "NOTE"
+#echo ""
+#echo "ntopng Community does not require a license."
+#echo "ntopng Pro/Enterprise licenses are perpetual and include 1 year maintenance/updates:"
+#echo "you can use the software even after maintenance is expired, however updating it after"
+#echo "1 year would prevent ntopng from running. If you have automatic updates enabled, and"
+#echo "maintenance is expired, it is recommended to put the package updates on hold with:"
+#echo ""
+#echo "apt-mark hold ntopng"
+#echo ""
+#echo "Automatic updates can be enabled again with:"
+#echo ""
+#echo "apt-mark unhold ntopng"
 echo ""
 
 exit 0
--- ubuntu/debian.ntopng/prerm.in.orig	2023-03-04 07:23:28.689708559 -0500
+++ ubuntu/debian.ntopng/prerm.in	2023-03-07 14:44:07.772368039 -0500
@@ -46,7 +46,7 @@
 	;;
 
 	*)
-	if [ "$1" = "upgrade" ]; then prompt_license_expired; fi
+	#if [ "$1" = "upgrade" ]; then prompt_license_expired; fi
 	echo "Stopping @APP@ services..."
 	if hash systemctl 2>/dev/null; then
 	    if hash deb-systemd-invoke 2>/dev/null; then
